{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/Images/You-Lose.jpg","webpack:///./src/Images/You-Win.jpg","webpack:///./src/Images/background.png","webpack:///./src/Images/hills.png","webpack:///./src/Images/platform.png","webpack:///./src/Images/platformSmallTall.png","webpack:///./src/Images/spriteRunLeft.png","webpack:///./src/Images/spriteRunRight.png","webpack:///./src/Images/spriteStandLeft.png","webpack:///./src/Images/spriteStandRight.png","webpack:///./src/js/canvas.js"],"names":["canvas","document","querySelector","c","getContext","width","height","gravity","Player","speed","position","x","y","velocity","frames","sprites","stand","right","createImage","spriteStandRight","left","spriteStandLeft","cropWidth","run","spriteRunRight","spriteRunLeft","currentSprite","currentCropWidth","drawImage","draw","Platform","image","GenericObject","Message","imageSrc","Image","src","player","platformImage","platform","platformSmallTallImage","platformSmallTall","win","youwin","lose","youlose","platforms","genericObjects","messages","lastKey","keys","pressed","scrollOffset","init","background","hills","animate","requestAnimationFrame","fillStyle","fillRect","forEach","genericObject","update","console","log","window","addEventListener","keyCode"],"mappings":"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","file":"./js/canvas.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/js/canvas.js\");\n","export default __webpack_public_path__ + \"dd581b3c4a8d2cfa126b3e8e837f5bd8.jpg\";","export default __webpack_public_path__ + \"226e4d9dd5107335658384c73ecf165f.jpg\";","export default __webpack_public_path__ + \"072d51bcc9c09311d4c2a6708b05bddc.png\";","export default __webpack_public_path__ + \"cfffe4c371f5e11d372b398a87c51dd0.png\";","export default __webpack_public_path__ + \"ffab39d3487de561be1a081fcfb3806d.png\";","export default __webpack_public_path__ + \"0587f9be8e442eb74b2fe283bbf1a947.png\";","export default __webpack_public_path__ + \"c67ea51444aafa9bdcd5bdfd4f4a55bb.png\";","export default __webpack_public_path__ + \"a2f75989924952a7e49ce0405d487c93.png\";","export default __webpack_public_path__ + \"11514f48f22f6d8e3cf748e45e3e1ffb.png\";","export default __webpack_public_path__ + \"01e8f15e899155c68950c40e0a6b8df0.png\";","//We can't import images directly from the file system and so need to create some sort of a server to import images from it\n//There's a live server extension in VS Code and so a server like localhost:3000 can be rendered easily there; But for Sublime Text, things to be a bit different\n\n//We need to use Canvas Boilerplate to import images into the game\n//Then we'll have to copy the entire code of index.js and index.html to mario-game server folder and continue coding there; No need for index.html also actually\n\nimport platform from \"../Images/platform.png\";\n//console.log(platform); Here we see that our platform image is correctly made into the game seen through the console\nimport background from \"../Images/background.png\";\nimport hills from \"../Images/hills.png\";\nimport platformSmallTall from \"../Images/platformSmallTall.png\";\nimport spriteRunLeft from \"../Images/spriteRunLeft.png\";\nimport spriteRunRight from \"../Images/spriteRunRight.png\";\nimport spriteStandLeft from \"../Images/spriteStandLeft.png\";\nimport spriteStandRight from \"../Images/spriteStandRight.png\";\nimport youwin from \"../Images/You-Win.jpg\";\nimport youlose from \"../Images/You-Lose.jpg\";\n\nconst canvas = document.querySelector(\"canvas\"); //It helps us select a paricular element from html file\n\nconst c = canvas.getContext(\"2d\"); //As we create a 2D game, we pass in the argument as a string called 2D\n\n//console.log(canvas); To see if html and js files are connected by using the script tag with src mentioned, we use the console log and we get output on console as canvas too\n//console.log(c) - This will even show us that the context is being passed correctly\n\n//canvas.width = window.innerWidth; Actually when a window element is referenced, we can directly write that property instead of specifying window. i.e. we can write canvas.width=innerwidth only\n//canvas.height = window.innerHeight;\n//Still we see that the canvas element doesn't cover the entire height and width and some margin is given by default to the element\n\n//Making the game responsive is very hard; so we limit the playable area to 16:9 aspect ratio only\ncanvas.width = 1024;\ncanvas.height = 576;\n\nconst gravity = 1.5;\n\n//Now to create any character, we need to create a Javascript ES6 class\nclass Player {\n  constructor() {\n    this.speed = 7.5;\n    this.position = {\n      x: 100,\n      y: 100,\n    };\n    this.velocity = {\n      x: 0,\n      y: 0, //In canvas the positive y axis is downwards and so adding a y-velocity of 1 would pull the player downwards, acting like gravity\n      //Even if the y velocity is set to 0, it'll increase eventually due to the y acceleration\n    };\n    this.width = 66; //This is the default value, but it changes when the character runs\n    this.height = 150;\n\n    //this.image = createImage(spriteStandRight);\n    this.frames = 0; //This will tell us on which frame of the image we're currently on\n    this.sprites = {\n      //This is an object that defines properties of what our character is doing\n      stand: {\n        right: createImage(spriteStandRight),\n        left: createImage(spriteStandLeft),\n        cropWidth: 177, //cropWidths for standing and running animations are different\n        width: 66,\n      },\n      run: {\n        right: createImage(spriteRunRight),\n        left: createImage(spriteRunLeft),\n        cropWidth: 341,\n        width: 127.875,\n      },\n    };\n\n    this.currentSprite = this.sprites.stand.right; //This tells us which sprite is currently in use and which to render accordingly and by default it's the stand right position\n    this.currentCropWidth = this.sprites.stand.cropWidth;\n  } //Whenever a player is created, this Constructor function gets fired and assigns properties to our player\n  //Lets first consider making our player as a square, then it'll have properties of an x-position, y-position, width, height and maybe a color\n\n  // draw() {\n  //   c.fillStyle = \"red\";\n  //   //fillStyle when written here makes the square red but when written below the fillRect has no effect\n\n  //   //This function is used to draw our player on the canvas\n  //   c.fillRect(this.position.x, this.position.y, this.width, this.height); //Now the color of a Player ocreated is black by default\n  // }\n  //Our player is no longer a red square but the Sprite character\n  draw() {\n    c.drawImage(\n      //By this the character looks really smushed up; But it's ok as we'll extend the drawImage function to crop a part of the image at a time so that the animation effect is created\n      //For that we need to add 4 more arguments specifying from where and by how much we need to crop the image\n      this.currentSprite,\n      this.currentCropWidth * this.frames, //When frames increase continuosly, the width increases by 177 each time and we see the standing Sprite\n      0,\n      this.currentCropWidth,\n      400, //We need crop fro top left corner and by width of 177 as total width =14400 but each's width=177 and height=400; Info got from properties of the image\n      this.position.x,\n      this.position.y,\n      this.width,\n      this.height\n    );\n  }\n\n  update() {\n    this.frames++;\n    if (\n      this.frames > 59 &&\n      (this.currentSprite === this.sprites.stand.right ||\n        this.currentSprite === this.sprites.stand.left)\n    ) {\n      //frame rate for standing is 59 and for running is 29\n      this.frames = 0;\n    } else if (\n      this.frames > 29 &&\n      (this.currentSprite === this.sprites.run.right ||\n        this.currentSprite === this.sprites.run.left)\n    ) {\n      this.frames = 0;\n    }\n\n    //This function will update the properties of the player like the position, etc.\n    this.position.x += this.velocity.x; //The x-velocity of the player needs to be added to the x-position; else it won't move at all\n    this.position.y += this.velocity.y; //This line of code should be written above actually to make the player move\n    if (this.position.y + this.height + this.velocity.y <= canvas.height) {\n      this.velocity.y += gravity;\n    } //This condition says that only till the bottom of the player reaches the bottom of the canvas, the acceleration works\n    // else {\n    //   this.velocity.y = 0;\n    // } As soon as the player reaches the bottom of the screen, the player stops\n    //We don't need this anymore as once the player falls in a death pit, the game ends\n    this.draw();\n  }\n}\n\nclass Platform {\n  constructor({ x, y, image }) {\n    //Can pass image as an argument too\n    //Can reference the x and y through the parameters\n    //Constructor method of platforms comes handy here as instead of defining the position here, we can pass them as props while making the platform\n    this.position = {\n      x: x,\n      y: y, //When the property and the assigned value are the same, no need to write the :, like here instead of x: x directly write x\n    };\n\n    this.image = image;\n\n    this.width = image.width; //Setting the width and height of the platform as the same as that of the image\n    this.height = image.height;\n  }\n\n  draw() {\n    // c.fillStyle = \"blue\";\n    // c.fillRect(this.position.x, this.position.y, this.width, this.height);\n    //We can now remove this part of code as we're importing our image now\n    c.drawImage(this.image, this.position.x, this.position.y);\n  }\n}\n//To make the player stay on top of platform, we need to use Rectangular Collision detection, which is how to code to see the detection of collision between two rectangular objects\n\n//We need to create a class only for objects we'll be using for the purpose of decoration\nclass GenericObject {\n  constructor({ x, y, image }) {\n    this.position = {\n      x: x,\n      y: y,\n    };\n    this.image = image;\n\n    this.width = image.width;\n    this.height = image.height;\n  }\n\n  draw() {\n    c.drawImage(this.image, this.position.x, this.position.y);\n  }\n}\n\nclass Message {\n  constructor({ x, y, image }) {\n    this.position = {\n      x: x,\n      y: y,\n    };\n    this.image = image;\n\n    this.width = image.width;\n    this.height = image.height;\n  }\n\n  draw() {\n    c.drawImage(this.image, this.position.x, this.position.y);\n  }\n}\n\n// const image = new Image();\n// image.src = platform;\n// console.log(image); Using this we see that we get an HTML image object which appears at the top\n//Once different images come into picture, writing the above code again and again becomes tedious; SO we use a function to create images again and again\nfunction createImage(imageSrc) {\n  //Our imageSrc would be the images imported at the top\n  const image = new Image();\n  image.src = imageSrc;\n  return image;\n}\n\n//Now to implement this player class, we do:\nlet player = new Player();\n//player.draw();\n//We see that eventhought the width and height are the same, the player isn't a square, rather a rectangle and that's because our Canvas element doesn't take up the whole screen as expected\n//const platform = new Platform();\n//To create multiple platforms, we just place this Platform() method in an array\nlet platformImage = createImage(platform); //const keywords won't allow us to change the values of these variables upon resetting\nlet platformSmallTallImage = createImage(platformSmallTall);\nconst win = createImage(youwin);\nconst lose = createImage(youlose);\nlet platforms = [\n  // new Platform({ x: -1, y: 470, image: platformImage }),\n  // new Platform({ x: platformImage.width - 3, y: 470, image: platformImage }),\n  // new Platform({\n  //   x: platformImage.width * 2 + 100,\n  //   y: 470,\n  //   image: platformImage,\n  // }),\n  // new Platform({ x: platformImage.width - 3, y: 470, image: platformImage }),\n]; //Now we can add multiple platforms in this array\n\nlet genericObjects = [\n  // new GenericObject({\n  //   x: -1,\n  //   y: -1,\n  //   image: createImage(background),\n  // }),\n  // new GenericObject({\n  //   x: -1,\n  //   y: -1,\n  //   image: createImage(hills),\n  // }),\n]; //No objects created initially; only on calling init(), the objects will be created and so we'll even call init at the start of the game\n\nlet messages = [];\n\nlet lastKey; //Initially it's set to nothing\nconst keys = {\n  //We create an object called keys monitoring the right and left keys, each having a property of pressed that's set to false by default\n  right: {\n    pressed: false,\n  },\n  left: {\n    pressed: false,\n  },\n};\n\n//The win scenario would be like reaching a particular position and so we'll maintain a variable that tracks how far we have moved from the initial position\n//let keyword used for that as it'll keep changing over and over\nlet scrollOffset = 0;\n\nfunction init() {\n  //platformImage = createImage(platform);\n  player = new Player();\n  platforms = [\n    new Platform({\n      //We want our small tall platform at the farthest point; hence it should be called first in the array\n      x:\n        platformImage.width * 4 +\n        397 +\n        platformImage.width -\n        platformSmallTallImage.width,\n      y: 250,\n      image: platformSmallTallImage,\n    }),\n    new Platform({ x: -1, y: 470, image: platformImage }),\n    new Platform({ x: platformImage.width - 3, y: 470, image: platformImage }),\n    new Platform({\n      x: platformImage.width * 2 + 150,\n      y: 470,\n      image: platformImage,\n    }),\n    new Platform({\n      x: platformImage.width * 3 + 400,\n      y: 470,\n      image: platformImage,\n    }),\n    new Platform({\n      x: platformImage.width * 4 + 397,\n      y: 470,\n      image: platformImage,\n    }),\n    new Platform({\n      x: platformImage.width * 5 + 840,\n      y: 470,\n      image: platformImage,\n    }),\n  ]; //Now we can add multiple platforms in this array\n\n  genericObjects = [\n    new GenericObject({\n      x: -1,\n      y: -1,\n      image: createImage(background),\n    }),\n    new GenericObject({\n      x: -1,\n      y: -1,\n      image: createImage(hills),\n    }),\n  ];\n\n  messages = [\n    new Message({\n      x: 110,\n      y: 0,\n      image: win,\n    }),\n    new Message({\n      x: 260,\n      y: 40,\n      image: lose,\n    }),\n  ];\n\n  //The win scenario would be like reaching a particular position and so we'll maintain a variable that tracks how far we have moved from the initial position\n  //let keyword used for that as it'll keep changing over and over\n  scrollOffset = 0;\n}\n\n//player.update();\n//player.update() must be called to make the player move actually and not draw\n//Still the player just moves once and stops and doesn't move with time as we haven't added an animation loop yet\n\nfunction animate() {\n  requestAnimationFrame(animate);\n  c.fillStyle = \"white\";\n  //console.log(\"go\"); We see that on running this function, the string go is being printed over and over again\n  //c.clearRect(0, 0, canvas.width, canvas.height); This will completely clean off the canvas after each call and again the player is created after that, which allows the shape of the player to be maintained\n  //We see that in stacked platform conditions, the player hides behind the platform and that's because we have to draw the player at the very last always; hence player.update() must be the last function called always and then thhe player will be visible in platform stacked conditions too\n  c.fillRect(0, 0, canvas.width, canvas.height);\n\n  genericObjects.forEach((genericObject) => {\n    genericObject.draw();\n  }); //The generic images must be drawn the very first as they're on the far back end\n\n  platforms.forEach((platform) => {\n    platform.draw();\n  }); //Looping through the platforms array, we take each individual platform element and draw it\n  //platform.draw();\n\n  player.update();\n\n  if (keys.right.pressed && player.position.x < 400) {\n    //After 400 the background moves instead\n    player.velocity.x = player.speed;\n  } else if (\n    (keys.left.pressed && player.position.x > 100) ||\n    (keys.left.pressed && scrollOffset === 0 && player.position.x > 0)\n  ) {\n    player.velocity.x = -player.speed;\n  } else {\n    player.velocity.x = 0;\n    if (keys.right.pressed) {\n      //platform.position.x -= 5; When player moves to the right, the plaform must move to the left at the same rate to create the illusion of movement\n      platforms.forEach((platform) => {\n        scrollOffset += player.speed;\n        platform.position.x -= player.speed; //Only when the platforms move, the scrollOffset would change\n      });\n      genericObjects.forEach((genericObject) => {\n        genericObject.position.x -= player.speed * 0.66; //Here parallax scroll used meaning the background objects move at a slower speed than the nearer ones as far ones move by 3 and near ones by 5\n      });\n    } else if (keys.left.pressed && scrollOffset > 0) {\n      //platform.position.x += 5;\n      platforms.forEach((platform) => {\n        scrollOffset -= player.speed;\n        platform.position.x += player.speed;\n      });\n      genericObjects.forEach((genericObject) => {\n        genericObject.position.x += player.speed * 0.66;\n      });\n    }\n  } //Now when we leave the A or D keys, the player stops immediately as it's written in the Animate loop\n\n  //console.log(scrollOffset);\n\n  platforms.forEach((platform) => {\n    //For the conditionals to work just fine with the platform name, we place the entire conditional inside the arrow function\n    //We will need a conditional to check if the bottom of the player is below or above the platform\n    if (\n      //Platform Collision Detection\n      //Collision Detection code won;t work correctly after the images are imported as default width and height have been assigned to the platforms which are different from those of the image\n      player.position.y + player.height <= platform.position.y &&\n      player.position.y + player.height + player.velocity.y >=\n        platform.position.y &&\n      player.position.x + player.width >= platform.position.x &&\n      player.position.x <= platform.position.x + platform.width //These are conditions for the player to remain on the top of the platform\n    ) {\n      player.velocity.y = 0;\n    }\n  });\n\n  //Sprite switching\n  if (\n    keys.right.pressed &&\n    lastKey === \"right\" &&\n    player.currentSprite !== player.sprites.run.right\n  ) {\n    //When player stands after running for some distance\n    player.frames = 1;\n    player.currentSprite = player.sprites.run.right;\n    player.currentCropWidth = player.sprites.run.cropWidth;\n    player.width = player.sprites.run.width;\n  } else if (\n    keys.left.pressed &&\n    lastKey === \"left\" &&\n    player.currentSprite !== player.sprites.run.left\n  ) {\n    player.frames = 1;\n    player.currentSprite = player.sprites.run.left;\n    player.currentCropWidth = player.sprites.run.cropWidth;\n    player.width = player.sprites.run.width;\n  } else if (\n    !keys.left.pressed &&\n    lastKey === \"left\" &&\n    player.currentSprite !== player.sprites.stand.left\n  ) {\n    player.frames = 1;\n    player.currentSprite = player.sprites.stand.left;\n    player.currentCropWidth = player.sprites.stand.cropWidth;\n    player.width = player.sprites.stand.width;\n  } else if (\n    !keys.right.pressed &&\n    lastKey === \"right\" &&\n    player.currentSprite !== player.sprites.stand.right\n  ) {\n    player.frames = 1;\n    player.currentSprite = player.sprites.stand.right;\n    player.currentCropWidth = player.sprites.stand.cropWidth;\n    player.width = player.sprites.stand.width;\n  }\n\n  //Win Condition\n  if (scrollOffset > platformImage.width * 45 + 300) {\n    console.log(\"You Win!!\");\n    messages[0].draw();\n  }\n\n  //Lose COndition; We want to restart the game once we fall into a pit and that means calling all the initialization code over again\n  if (player.position.y > canvas.height) {\n    console.log(\"You Lose!!\");\n    //init(); init function will reset player stats so that the game is restarted\n    messages[1].draw();\n  }\n} //But we want an actual physics gravity here instead of just pushing our player down\n\ninit();\nanimate();\n\n//We need to add Event Listeners to track the inputs given from the keyboard and then convert them to movement of the player\n\nwindow.addEventListener(\"keydown\", ({ keyCode }) => {\n  //console.log(\"keydown\"); This is just to check if our code is working fine or not\n  //console.log(event); This would show in console a bunch of properties when a key is pressed, if event parameter is passed; but we need to see the keycode property that shows which key is pressed on keyboard actually\n  //console.log(keyCode); This would show a number corresponding to each key called keyCode\n  //Now we want upon the pressing of w, a, s or d there should be diiferent functions triggered; So, we use a Switch case here\n\n  //Here we're determining if our sprite character is running or not, so the swap of image of character done here\n  switch (keyCode) {\n    case 65:\n      //console.log(\"Left\"); a key has a code of 65 and upon clicking it we test if it's being logged in console or not\n      //player.velocity.x -= 1; This will make the player move to the left but even when we lift off from the key, it still continues to move\n      //To do that we need to add an additional eventListener called keyup so that when we lift off from the key, the movement stops\n      keys.left.pressed = true;\n      // player.currentSprite = player.sprites.run.left;\n      // player.currentCropWidth = player.sprites.run.cropWidth;\n      // player.width = player.sprites.run.width;\n      lastKey = \"left\";\n      break;\n    case 83:\n      //console.log(\"Down\");\n      break;\n    case 68:\n      //console.log(\"Right\");\n      //player.velocity.x += 1;\n      keys.right.pressed = true;\n      // player.currentCropWidth = player.sprites.run.cropWidth;\n      // player.currentSprite = player.sprites.run.right;\n      // player.width = player.sprites.run.width;\n      lastKey = \"right\"; //keys.pressed is not used as we may press on one key before lifting from other which may cause confusion\n      break;\n    case 87:\n      //console.log(\"Up\");\n      player.velocity.y -= 30; //-= done as we know that - on the y axis in canvas means going up; This works as our velocity adds on to the y position of the player and once the player is in air, the gravity acts and pulls the player down ofc\n      break;\n    //Now we're monitoring all the key presses; To move the player around, we need to use the velocity property that moves the player\n  }\n  //console.log(keys.right.pressed); This is just to see that when we press the d key, the value changes to true and vice versa\n}); //Again any method that comes from the window object doesn't need the mention of the word window; directly we can write addEventListener()\n//Again upon keydown, i.e. pressing of any key on the keyboard, we need to call an arrow function\n\nwindow.addEventListener(\"keyup\", ({ keyCode }) => {\n  switch (keyCode) {\n    case 65:\n      //player.velocity.x = 0;\n      keys.left.pressed = false;\n      // player.currentCropWidth = player.sprites.stand.cropWidth;\n      // player.currentSprite = player.sprites.stand.left;\n      // player.width = player.sprites.stand.width;\n      break;\n    case 68:\n      //player.velocity.x = 0;\n      keys.right.pressed = false;\n      // player.currentCropWidth = player.sprites.stand.cropWidth;\n      // player.currentSprite = player.sprites.stand.right; //But initially the animation doesn't work properly as the crop width for standing and running animations are different\n      // player.width = player.sprites.stand.width;\n      //This won't work correctly in the unique scenario if both A and D keys are pressed, then finally the sprite won't run but just slide along when standing\n      break;\n  }\n  //console.log(keys.right.pressed); We can use these keys properties in the animate loop to move the player to the right or left\n}); //But we won't be moving our player using event listeners only because we see that upon holding the side keys for a bit too long, the player accelerates because the velocity is being continuously added to it\n//To stop it accelerating, just do player.velocity.x=1 instead of +=1, etc.\n//We need that when the player reaches a particular position on the screen, it stops and the background moves creating an illusion that the player is moving actually\n//We'll use Parallel Scroll that ensures our background moves differently than our foreground giving a great effect\n//Sprite sheets provided that have images of the character on a full cycle of movement to create a good animation effect\n"],"sourceRoot":""}